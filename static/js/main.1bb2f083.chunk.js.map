{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleSort","setState","prevState","handleReverse","sortedGoods","goods","visibleGoods","ALPHABET","sort","prev","next","localeCompare","LENGTH","length","reverse","console","log","getReorderedGoods","this","className","type","cn","onClick","map","good","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAe,CACbC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,WAAa,SAACF,GACZ,EAAKG,UAAS,SAAAC,GACZ,MAAO,CACLJ,WACAD,WAAYC,IAAaL,EAASM,MAAeG,EAAUL,gBAVnE,EAeEM,cAAgB,WACd,EAAKF,UAAS,SAAAC,GACZ,MAAO,CACLL,YAAaK,EAAUL,gBAlB/B,4CAuBE,WAAU,IAAD,OACDO,EAvDH,SACLC,EADK,GAGJ,IADCP,EACF,EADEA,SAAUD,EACZ,EADYA,WAENS,EAAY,YAAOD,GAEzB,OAAQP,GACN,KAAKL,EAASc,SACZD,EAAaE,MAAK,SAACC,EAAMC,GAAP,OAAgBD,EAAKE,cAAcD,MACrD,MACF,KAAKjB,EAASmB,OACZN,EAAaE,MAAK,SAACC,EAAMC,GAAP,OAAgBD,EAAKI,OAASH,EAAKG,UAYzD,OAPIhB,GACFS,EAAaQ,UAIfC,QAAQC,IAAIlB,EAAUD,GAEfS,EAgCeW,CAAkBvB,EAAiBwB,KAAKtB,OAE5D,OACE,sBAAKuB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYH,KAAKtB,MAAME,WAAaL,EAASc,WAE/Ce,QAAS,kBAAM,EAAKtB,WAAWP,EAASc,WAL1C,iCAUA,wBACEa,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYH,KAAKtB,MAAME,WAAaL,EAASmB,SAE/CU,QAAS,kBAAM,EAAKtB,WAAWP,EAASmB,SAL1C,4BAUA,wBACEQ,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAaH,KAAKtB,MAAMC,aAE1ByB,QAASJ,KAAKf,cALhB,sBAUEe,KAAKtB,MAAMC,YAAcqB,KAAKtB,MAAME,WAAaL,EAASM,OAC1D,wBACEqB,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAAM,EAAKtB,WAAWP,EAASM,OAH1C,sBAUJ,6BACGK,EAAYmB,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,eAvE3D,GAAyBC,IAAMC,eCzD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1bb2f083.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((prev, next) => prev.localeCompare(next));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((prev, next) => prev.length - next.length);\n      break;\n    default:\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.PureComponent<{}, State> {\n  state: State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleSort = (sortType: SortType) => {\n    this.setState(prevState => {\n      return {\n        sortType,\n        isReversed: sortType === SortType.NONE ? false : prevState.isReversed,\n      };\n    });\n  };\n\n  handleReverse = () => {\n    this.setState(prevState => {\n      return {\n        isReversed: !prevState.isReversed,\n      };\n    });\n  };\n\n  render() {\n    const sortedGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn('button is-info', {\n              'is-light': this.state.sortType !== SortType.ALPHABET,\n            })}\n            onClick={() => this.handleSort(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn('button is-success', {\n              'is-light': this.state.sortType !== SortType.LENGTH,\n            })}\n            onClick={() => this.handleSort(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn('button is-warning', {\n              'is-light': !this.state.isReversed,\n            })}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n\n          {(this.state.isReversed || this.state.sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => this.handleSort(SortType.NONE)}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {sortedGoods.map(good => <li data-cy=\"Good\" key={good}>{good}</li>)}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}